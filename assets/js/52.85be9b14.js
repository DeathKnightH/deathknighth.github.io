(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{420:function(s,a,t){"use strict";t.r(a);var e=t(44),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"索引-mysql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引-mysql"}},[s._v("#")]),s._v(" 索引-MySQL")]),s._v(" "),t("p",[s._v("索引是最常见和常用的优化查询技术，对于中/大型表，索引的优化效果十分明显，这也是通常业务数据库中最常见的表规模。")]),s._v(" "),t("p",[s._v("对于小型表，全表扫描可能效率更高。")]),s._v(" "),t("p",[s._v("对于特大型表，使用分区/分表技术更合适。")]),s._v(" "),t("h2",{attrs:{id:"_1-按数据结构分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-按数据结构分类"}},[s._v("#")]),s._v(" 1. 按数据结构分类")]),s._v(" "),t("h3",{attrs:{id:"_1-1-hashtable"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-hashtable"}},[s._v("#")]),s._v(" 1.1 HashTable")]),s._v(" "),t("p",[t("code",[s._v("MEMORY")]),s._v(" 引擎默认索引结构。")]),s._v(" "),t("p",[s._v("哈希表精确等值查询时间复杂度很低，到达了 O(1)，但是有如下缺点：")]),s._v(" "),t("ul",[t("li",[s._v("无法用于排序与分组。")]),s._v(" "),t("li",[s._v("只支持精确查找，无法用于部分查找和范围查找。")])]),s._v(" "),t("p",[s._v("实现原理很简单，就是针对索引字段计算哈希值，后续精确查找时计算条件的哈希值直接到对应位置取值。")]),s._v(" "),t("p",[s._v("现在单独使用 HashTable 索引很少，最常见的是使用 B+ Tree 索引时的 "),t("code",[s._v("自适应哈希索引")]),s._v("，对 B+ Tree 索引中频繁使用的索引值计算哈希，建立针对索引值的哈希索引，增强 B+ Tree 索引在精确查找时的性能。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-b-tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-b-tree"}},[s._v("#")]),s._v(" 1.2 B+ Tree")]),s._v(" "),t("p",[t("code",[s._v("InnoDB")]),s._v(" 和 "),t("code",[s._v("MyISAM")]),s._v(" 引擎默认的索引结构。")]),s._v(" "),t("p",[s._v("B+ Tree 由二叉树一路演进而来：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("二叉树要查找快速，于是有了二叉查找树。")])]),s._v(" "),t("li",[t("p",[s._v("二叉查找树在最坏情况下会退化成链表，于是有了平衡二叉查找树，最有名的实现方案就是红黑树。")])]),s._v(" "),t("li",[t("p",[s._v("红黑树出度为 "),t("code",[s._v("2")]),s._v("，在数据量打的时候高度还是太高了，检索次数太多。于是有了多叉平衡查找树 B-Tree。")])]),s._v(" "),t("li",[t("p",[s._v("由于磁盘 I/O 的特性，每次会顺序读取相邻的一整段数据，于是又有了 B+ Tree，在多叉平衡查找树的基础上把叶子结点链接成链表，提高区间查找性能。")])])]),s._v(" "),t("h4",{attrs:{id:"_1-2-1-数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-数据结构"}},[s._v("#")]),s._v(" 1.2.1 数据结构")]),s._v(" "),t("p",[s._v("所有叶子结点都在同一层，叶子节点连成一个链表，同时兼具平衡查找树和顺序访问的特性。")]),s._v(" "),t("p",[s._v("如图，一个节点的 key 从左到右非递减排列：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://pdai.tech/_images/mysql/061c88c1-572f-424f-b580-9cbce903a3fe.png",alt:"img"}})]),s._v(" "),t("h4",{attrs:{id:"_1-2-2-引擎实现区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-引擎实现区别"}},[s._v("#")]),s._v(" 1.2.2 引擎实现区别")]),s._v(" "),t("p",[s._v("MyISAM 和 InnoDB 引擎索引结构都是 B+ Tree，但是实现时有区别：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th"),s._v(" "),t("th",[s._v("MyISAM")]),s._v(" "),t("th",[s._v("InnoDB")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("索引文件和数据文件")]),s._v(" "),t("td",[s._v("分开。先查找索引，找到目标数据后还需要根据地址去数据文件中获取数据。")]),s._v(" "),t("td",[s._v("统一。主索引文件本身就是数据文件即"),t("code",[s._v(".ibd")]),s._v(" 文件，查找到目标索引值后可以直接取到数据。")])]),s._v(" "),t("tr",[t("td",[s._v("实现分类")]),s._v(" "),t("td",[s._v("又称"),t("code",[s._v("非聚簇索引")]),s._v("。")]),s._v(" "),t("td",[s._v("又称"),t("code",[s._v("聚簇索引")]),s._v("。")])]),s._v(" "),t("tr",[t("td",[s._v("辅助索引")]),s._v(" "),t("td",[s._v("没有分类，都是普通索引。")]),s._v(" "),t("td",[s._v("需要根据辅助索引找到主索引值，在查找主索引文件。")])])])]),s._v(" "),t("h2",{attrs:{id:"_2-按索引类型分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-按索引类型分"}},[s._v("#")]),s._v(" 2. 按索引类型分")]),s._v(" "),t("h3",{attrs:{id:"_2-1-主键索引-primary-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-主键索引-primary-key"}},[s._v("#")]),s._v(" 2.1 主键索引（Primary Key）")]),s._v(" "),t("p",[s._v("一张表只能有 "),t("code",[s._v("1")]),s._v(" 个主键，因此也只能有 "),t("code",[s._v("1")]),s._v(" 个主键索引。")]),s._v(" "),t("p",[s._v("主键字段值不能为 "),t("code",[s._v("NULL")]),s._v(" 且不能重复，在 InnoDB 中如果建表时没有显示指定表的主键时，会先检查表中是否有建立了"),t("code",[s._v("唯一索引")]),s._v("的字段：")]),s._v(" "),t("ul",[t("li",[s._v("有，则选择该字段作为默认主键")]),s._v(" "),t("li",[s._v("没有，则自动创建一个 "),t("code",[s._v("6")]),s._v(" byte 大小的字段作为自增主键")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-二级索引-辅助索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-二级索引-辅助索引"}},[s._v("#")]),s._v(" 2.2 二级索引（辅助索引）")]),s._v(" "),t("p",[s._v("二级索引的叶子节点存储的数据为 "),t("code",[s._v("主键值")]),s._v("。通常也是用二级索引定位主键值，再返回主键索引定位数据值。")]),s._v(" "),t("p",[s._v("以下索引均属于二级索引：")]),s._v(" "),t("ul",[t("li",[s._v("非主键的唯一索引。")]),s._v(" "),t("li",[s._v("普通索引。")]),s._v(" "),t("li",[s._v("前缀索引。")])]),s._v(" "),t("h2",{attrs:{id:"_3-按数据存储方式分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-按数据存储方式分"}},[s._v("#")]),s._v(" 3. 按数据存储方式分")]),s._v(" "),t("h3",{attrs:{id:"_3-1-聚簇索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-聚簇索引"}},[s._v("#")]),s._v(" 3.1 聚簇索引")]),s._v(" "),t("p",[s._v("聚簇索引即索引结构和数据存放在一起的索引，InnoDB 的主键索引就属于聚簇索引。")]),s._v(" "),t("p",[t("strong",[s._v("优点")]),s._v("：")]),s._v(" "),t("p",[s._v("​\t使用聚簇索引查询很快，定位到索引值就定位到了数据。")]),s._v(" "),t("p",[t("strong",[s._v("缺点")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("依赖于有序的数据：如果数据本身无序，那么插入时还需要先进行排序。")]),s._v(" "),t("li",[s._v("更新代价大：如果索引列数据被修改，索引本身也需要修改，对应的数据也需要修改，这样代价会很大。因此一般建表时主键会设置不可修改。")])]),s._v(" "),t("h3",{attrs:{id:"_3-2-非聚簇索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-非聚簇索引"}},[s._v("#")]),s._v(" 3.2 非聚簇索引")]),s._v(" "),t("p",[s._v("非聚簇索引，顾名思义和聚簇索引相反，索引结构和数据分开存储，二级索引都是非聚簇索引。")]),s._v(" "),t("p",[s._v("由于 MyISAM 引擎的实现特点，存储表数据和索引时分为两个文件，因此 MyISAM 的索引都是非聚簇索引。")]),s._v(" "),t("p",[t("strong",[s._v("优点")]),s._v("：")]),s._v(" "),t("p",[s._v("​\t更新代价小，只用更新索引结构和指向数据的地址就行了。")]),s._v(" "),t("p",[t("strong",[s._v("缺点")]),s._v("：")]),s._v(" "),t("ul",[t("li",[s._v("依赖有序数据")]),s._v(" "),t("li",[s._v("有可能会二次查询（即回表）：如果查询的目标没有覆盖索引，那么查找辅助索引后，还需要根据查找到的值到"),t("code",[s._v("主键索引")]),s._v("或者"),t("code",[s._v("数据文件")]),s._v("中进行二次查找。")])]),s._v(" "),t("h2",{attrs:{id:"_4-使用索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-使用索引"}},[s._v("#")]),s._v(" 4. 使用索引")]),s._v(" "),t("h3",{attrs:{id:"_4-1-添加索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-添加索引"}},[s._v("#")]),s._v(" 4.1 添加索引")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("创建表时添加索引：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" text_table "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  col1 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  col2 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("45")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'col1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("添加 PRIMARY KEY（主键索引）：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" PRIMERY "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("添加 UNIQUE （唯一索引）：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("添加 INDEX （普通索引）：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("添加 FULLTEXT （全文索引），5.6 之前只有 MyISAM 支持，5.6 之后 InnoDB 支持：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" FULLTEXT"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("添加多列索引：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name2'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name3'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"_4-2-修改-删除索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-修改-删除索引"}},[s._v("#")]),s._v(" 4.2 修改/删除索引")]),s._v(" "),t("p",[s._v("MySQL 没有修改索引的命令，只能先删再创建一个同名索引。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nCRAETE "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'column_name'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_4-3-查看索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-查看索引"}},[s._v("#")]),s._v(" 4.3 查看索引")]),s._v(" "),t("p",[s._v("有多个数据库时需要添加数据库限定命，以下两种方式都行：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" db_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("db_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("table_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"_5-索引优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-索引优化"}},[s._v("#")]),s._v(" 5. 索引优化")]),s._v(" "),t("h3",{attrs:{id:"_5-1-选择合适的索引列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-选择合适的索引列"}},[s._v("#")]),s._v(" 5.1 选择合适的索引列")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("合适的字段")]),s._v(" "),t("ul",[t("li",[s._v("不为 NULL 的字段。")]),s._v(" "),t("li",[s._v("被频繁查询的字段。")]),s._v(" "),t("li",[s._v("被作为查询条件的字段。")]),s._v(" "),t("li",[s._v("被频繁排序的字段。")]),s._v(" "),t("li",[s._v("被频繁用于连接的字段")])])]),s._v(" "),t("li",[t("p",[s._v("不合适的字段：")]),s._v(" "),t("ul",[t("li",[s._v("被频繁更新的字段。")]),s._v(" "),t("li",[s._v("选择性弱的字段，比如"),t("code",[s._v("性别")]),s._v("，只有两种取值。")])])])]),s._v(" "),t("p",[t("em",[t("strong",[s._v("ps:选择性强弱是指不重复的值占记录总数的比例，唯一索引选择性最强。")])])]),s._v(" "),t("h3",{attrs:{id:"_5-2-覆盖索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-覆盖索引"}},[s._v("#")]),s._v(" 5.2 覆盖索引")]),s._v(" "),t("p",[s._v("查询结果包含在索引中，比如只查询主键值，而主键值本身就是索引的 key，这样做有以下好处：")]),s._v(" "),t("ul",[t("li",[s._v("索引值本身占用空间较小时，可以减少磁盘数据访问量。")]),s._v(" "),t("li",[s._v("在 MyISAM 中覆盖索引可以不查询数据文件，减少了系统调用。")]),s._v(" "),t("li",[s._v("在 InnoDB 中辅助索引如果覆盖可以不用二次查询（回表）。")])]),s._v(" "),t("h3",{attrs:{id:"_5-3-独立使用索引字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-独立使用索引字段"}},[s._v("#")]),s._v(" 5.3 独立使用索引字段")]),s._v(" "),t("p",[s._v("在查询语句中不能将索引字段放入表达式/函数中，否则查询不会使用索引。")]),s._v(" "),t("p",[s._v("例如，如果对 student 表的 score 字段添加了普通索引，那么查询这么写就不会使用索引去查询：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("SELECT score FROM student WHERE score + 1 = 60;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_5-4-多列索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-多列索引"}},[s._v("#")]),s._v(" 5.4 多列索引")]),s._v(" "),t("p",[s._v("当需要使用多个列作为条件进行查询时，使用多列索引往往比多个单列索引性能更好。")]),s._v(" "),t("p",[s._v("但是多列索引也要注意避免冗余索引，当(a,b,c)命中时(b) 也一定命中，那么 (b) 就是冗余索引，所以在使用多列索引的情况下，很多单列索引都是冗余索引，也引申出了一个说法是尽可能地使用多列索引。")]),s._v(" "),t("h3",{attrs:{id:"_5-5-索引列使用顺序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-索引列使用顺序"}},[s._v("#")]),s._v(" 5.5 索引列使用顺序")]),s._v(" "),t("p",[s._v("把选择性强的索引列放在前面。")]),s._v(" "),t("h3",{attrs:{id:"_5-6-对于可变长字段使用前缀索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-对于可变长字段使用前缀索引"}},[s._v("#")]),s._v(" 5.6 对于可变长字段使用前缀索引")]),s._v(" "),t("p",[s._v("例如 BLOB、TEXT 和 VARCHAR 类型的列，使用前缀索引，只索引开始的部分字符：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'table_name'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_5-7-定期清理未使用索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-定期清理未使用索引"}},[s._v("#")]),s._v(" 5.7 定期清理未使用索引")]),s._v(" "),t("p",[s._v("索引是需要占用磁盘空间的，也会对 MySQL 服务器造成额外的性能损耗，可以通过查询 sys 库的 schema_unused_indexes 视图来查询哪些索引长期未使用，可以考虑清除这些索引。")])])}),[],!1,null,null,null);a.default=n.exports}}]);