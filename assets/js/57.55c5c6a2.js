(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{428:function(t,a,_){"use strict";_.r(a);var s=_(44),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,_=t._self._c||a;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"适配器模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#适配器模式"}},[t._v("#")]),t._v(" 适配器模式")]),t._v(" "),_("h2",{attrs:{id:"_1-概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[t._v("#")]),t._v(" 1. 概念")]),t._v(" "),_("p",[t._v("Adapter 又称封装器模式，是一种结构型设计模式，目的是使接口不兼容的对象能互相适配。")]),t._v(" "),_("h2",{attrs:{id:"_2-意图"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-意图"}},[t._v("#")]),t._v(" 2. 意图")]),t._v(" "),_("p",[t._v("封装复杂的对象转换过程，甚至可以通过实现业务逻辑接口的方式来隐藏适配器自身的存在(即业务代码无法感知适配器的存在)。")]),t._v(" "),_("h2",{attrs:{id:"_3-类图示例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-类图示例"}},[t._v("#")]),t._v(" 3. 类图示例")]),t._v(" "),_("p",[t._v("可以通过适配的层次不同分为两种：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("对象适配器")])]),t._v(" "),_("li",[_("p",[t._v("类适配器")])])]),t._v(" "),_("h2",{attrs:{id:"_4-适用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-适用场景"}},[t._v("#")]),t._v(" 4. 适用场景")]),t._v(" "),_("h3",{attrs:{id:"_4-1-实际业务场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-实际业务场景"}},[t._v("#")]),t._v(" 4.1 实际业务场景")]),t._v(" "),_("ul",[_("li",[t._v("两个系统对接，一个系统产生的数据格式不能直接被另一个系统使用，比如某个系统导出的分析数据是 xml 格式的，另一个系统是使用excel文件进行分析的，可以使用适配器模式：\n"),_("ul",[_("li",[t._v("创建一个 xml-excel 适配器，内部实现 xml 和 excel 格式互转。")]),t._v(" "),_("li",[t._v("也可以直接适配分析代码，创建一个 xml 适配器，直接和分析业务的代码对接，不经过 excel 转换。")])])]),t._v(" "),_("li",[t._v("在业务扩展过程中，可能出现一系列新的对象，他们都统一提供了某种额外的功能，如果直接扩展需要改动所有使用了这类对象的代码，这时也可以使用适配器模式：\n"),_("ul",[_("li",[t._v("将额外扩展的功能放到适配器中，这样其实更像装饰器模式。")])])])]),t._v(" "),_("h3",{attrs:{id:"_4-2-开源实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-开源实例"}},[t._v("#")]),t._v(" 4.2 开源实例")]),t._v(" "),_("p",[t._v("JDK 中：")]),t._v(" "),_("ul",[_("li",[t._v("java.util.Arrays#asList()")]),t._v(" "),_("li",[t._v("java.util.Collections#list()")])]),t._v(" "),_("p",[t._v("各种bean映射转换器：")]),t._v(" "),_("ul",[_("li",[t._v("mapstruct")]),t._v(" "),_("li",[t._v("dozer（已经基本不更新了）")])]),t._v(" "),_("h2",{attrs:{id:"_5-实现细节和技巧"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-实现细节和技巧"}},[t._v("#")]),t._v(" 5. 实现细节和技巧")]),t._v(" "),_("h2",{attrs:{id:"_6-优缺点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-优缺点"}},[t._v("#")]),t._v(" 6. 优缺点")]),t._v(" "),_("h2",{attrs:{id:"_7-与其他设计模式的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_7-与其他设计模式的关系"}},[t._v("#")]),t._v(" 7. 与其他设计模式的关系")])])}),[],!1,null,null,null);a.default=r.exports}}]);