(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{383:function(t,_,v){"use strict";v.r(_);var a=v(44),r=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"希尔排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序"}},[t._v("#")]),t._v(" 希尔排序")]),t._v(" "),v("p",[t._v("希尔排序（Shell Sort）也称为缩小增量排序，是一种改进的"),v("RouterLink",{attrs:{to:"/algorithm/sort/InsertionSort.html"}},[t._v("插入排序")]),t._v("。以它的发明者 Donald Shell 命名。")],1),t._v(" "),v("h2",{attrs:{id:"_1-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理"}},[t._v("#")]),t._v(" 1. 原理")]),t._v(" "),v("p",[t._v("对不相邻的元素进行比较和移动：\n1、将原序列分为自身元素间距相同的若干子序列。比如：")]),t._v(" "),v("blockquote",[v("p",[t._v("[1,2,3,4,5,6,7,8,9] 分为 [1,4,7]/[2,5,8]/[3,6,9] 这3个子序列")])]),t._v(" "),v("p",[t._v("2、对这些子序列分别执行插入排序。")]),t._v(" "),v("p",[t._v("3、减少每个子序列中各元素间的间距。")]),t._v(" "),v("p",[t._v("4、重复以上过程直至间距减少为 1，此时排序完成。")]),t._v(" "),v("h2",{attrs:{id:"_2-性质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-性质"}},[t._v("#")]),t._v(" 2.性质")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("性质")]),t._v(" "),v("th"),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("稳定性")]),t._v(" "),v("td",[t._v("不稳定")]),t._v(" "),v("td",[t._v("因为是分组排序的，不能保证相等元素的最终顺序")])]),t._v(" "),v("tr",[v("td",[t._v("最坏时间复杂度")]),t._v(" "),v("td",[t._v("O(n^2)")]),t._v(" "),v("td",[t._v("最坏情况间距为1，退化为直接插入排序")])]),t._v(" "),v("tr",[v("td",[t._v("最好时间复杂度")]),t._v(" "),v("td",[t._v("O(n)")]),t._v(" "),v("td",[t._v("完全有序的序列只需要扫描一次全序列就可以完成排序")])]),t._v(" "),v("tr",[v("td",[t._v("平均时间复杂度")]),t._v(" "),v("td",[t._v("O(n^3/2)")]),t._v(" "),v("td",[t._v("希尔排序的时间复杂度与分组间距有关，通常采用每次间距除以3来计算所以是 n^{3/2}")])]),t._v(" "),v("tr",[v("td",[t._v("空间复杂度")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("可以只用 1 个额外空间存储交换时的临时元素，某些特殊情况甚至可以不使用额外空间")])])])]),t._v(" "),v("h2",{attrs:{id:"_3-java-实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-java-实现"}},[t._v("#")]),t._v(" 3. Java 实现")])])}),[],!1,null,null,null);_.default=r.exports}}]);