(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{389:function(e,t,r){"use strict";r.r(t);var _=r(44),o=Object(_.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"双指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#双指针"}},[e._v("#")]),e._v(" 双指针")]),e._v(" "),r("p",[e._v("多用于线性数据结构，总的来说使用两个指针分别表示两个位置的算法思想都可以叫双指针。")]),e._v(" "),r("p",[e._v("这里只总结两种比较典型的双指针。")]),e._v(" "),r("h2",{attrs:{id:"_1-常见思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-常见思路"}},[e._v("#")]),e._v(" 1. 常见思路")]),e._v(" "),r("h3",{attrs:{id:"_1-1-链表里的双指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-链表里的双指针"}},[e._v("#")]),e._v(" 1.1 链表里的双指针")]),e._v(" "),r("p",[e._v("常见于单链表中，双指针的一个记录左区间，另一个记录右区间，可以用一次遍历和常数级空间复杂度完成特定区间的链表截取。\n例如：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("19.删除链表的倒数第 N 个结点"),r("OutboundLink")],1),e._v(" 使用间隔 N 个结点的两个指针 "),r("code",[e._v("l")]),e._v(" 和 "),r("code",[e._v("r")]),e._v("，当 "),r("code",[e._v("r")]),e._v(" 到达链表尾部时， "),r("code",[e._v("l")]),e._v(" 就是倒数第 N 个结点。")])]),e._v(" "),r("p",[e._v("另一种思路是 "),r("strong",[e._v("快慢指针")]),e._v("， 通过两个指针不同遍历步长，可以一次遍历就完成某些操作。\n例如：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/middle-of-the-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("876. 链表的中间结点"),r("OutboundLink")],1),e._v(" 使用两个步长不一样的指针 "),r("code",[e._v("slow")]),e._v(" 和 "),r("code",[e._v("fast")]),e._v("，"),r("code",[e._v("slow")]),e._v(" 每次遍历 1 个结点，"),r("code",[e._v("fast")]),e._v(" 每次遍历 2 个结点，当 "),r("code",[e._v("fast")]),e._v(" 到达链表尾部时，"),r("code",[e._v("slow")]),e._v(" 正好处于中间结点。")])]),e._v(" "),r("h3",{attrs:{id:"_1-2-相向交替移动的两个指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-相向交替移动的两个指针"}},[e._v("#")]),e._v(" 1.2 相向交替移动的两个指针")]),e._v(" "),r("p",[e._v("1、初始化两个指针 "),r("code",[e._v("l")]),e._v(" 和 "),r("code",[e._v("r")]),e._v("，其中 "),r("code",[e._v("l")]),e._v(" 指向数组开头，"),r("code",[e._v("r")]),e._v(" 指向数组结尾。")]),e._v(" "),r("p",[e._v("2、"),r("code",[e._v("l")]),e._v(" 向右移动，"),r("code",[e._v("r")]),e._v(" 向左移动，交替进行。移动过程中不回头。")]),e._v(" "),r("p",[e._v("3、直到 "),r("code",[e._v("l")]),e._v(" 和 "),r("code",[e._v("r")]),e._v(" 相遇，或者达到预期目标。")]),e._v(" "),r("h2",{attrs:{id:"_2-习题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-习题"}},[e._v("#")]),e._v(" 2.习题")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("141. 环形链表"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/container-with-most-water/",target:"_blank",rel:"noopener noreferrer"}},[e._v("11. 盛最多水的容器"),r("OutboundLink")],1)]),e._v(" "),r("li",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/",target:"_blank",rel:"noopener noreferrer"}},[e._v("160. 相交链表"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=o.exports}}]);