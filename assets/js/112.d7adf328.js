(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{492:function(e,t,_){"use strict";_.r(t);var a=_(44),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,_=e._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"redos-攻击"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#redos-攻击"}},[e._v("#")]),e._v(" ReDos 攻击")]),e._v(" "),_("p",[e._v("全称是 Regular Expressions Denial of Service（正则表达式拒绝服务），是一种 Dos 攻击方法，通过有缺陷的正则表达式，攻击者可以构造特殊的字符串来大量消耗服务器资源，造成服务中断。")]),e._v(" "),_("h2",{attrs:{id:"_1-攻击原理和危害"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-攻击原理和危害"}},[e._v("#")]),e._v(" 1. 攻击原理和危害")]),e._v(" "),_("p",[e._v("各语言/类库实现正则表达式引擎的算法大多是 NFA 的回溯式搜索算法，攻击者可以构造一个最坏情况的字符串让搜索算法的时间复杂度达到指数级，这样几十个字符也能造成大量的重复计算，从而消耗服务器资源。")]),e._v(" "),_("p",[e._v("ReDos 攻击会造成服务器满载（CPU占用100），此时服务器没有更多资源处理其他正常请求，造成服务中断。")]),e._v(" "),_("h2",{attrs:{id:"_2-防御措施"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-防御措施"}},[e._v("#")]),e._v(" 2. 防御措施")]),e._v(" "),_("ul",[_("li",[e._v("降低正则复杂度，尽量少用分组")]),e._v(" "),_("li",[e._v("使用正则表达式时限制用户输入长度")]),e._v(" "),_("li",[e._v("避免高危写法\n"),_("ul",[_("li",[e._v("包含替换的重复性分组，例如：\n"),_("ul",[_("li",[e._v("(\\d|\\d|\\d)+")])])]),e._v(" "),_("li",[e._v("包含自我重复的重复性分组，例如：\n"),_("ul",[_("li",[e._v("(\\d+)+")]),e._v(" "),_("li",[e._v("(\\d*)*")])])])])]),e._v(" "),_("li",[e._v("写完正则使用工具检测，例如：\n"),_("ul",[_("li",[_("a",{attrs:{href:"https://2bdenny.github.io/ReScue/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ReScue"),_("OutboundLink")],1)]),e._v(" "),_("li",[e._v("SDL Regex Fuzzer")])])]),e._v(" "),_("li",[e._v("OpenJDK 也正在尝试提供更安全的正则引擎，但是至今（JDK 16）还没有结果："),_("a",{attrs:{href:"https://bugs.openjdk.java.net/browse/JDK-8260688",target:"_blank",rel:"noopener noreferrer"}},[e._v("JDK-8260688"),_("OutboundLink")],1)])]),e._v(" "),_("h2",{attrs:{id:"_3-实例"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-实例"}},[e._v("#")]),e._v(" 3. 实例")]),e._v(" "),_("p",[e._v("遇到过这样的写法：")]),e._v(" "),_("blockquote",[_("p",[e._v("^([a-zA-Z0-9]+)+$")])]),e._v(" "),_("p",[e._v("输入一串连续相同的字符串时，例如："),_("code",[e._v("aaaaaaaaaa")]),e._v("，这个正则需要枚举 "),_("code",[e._v("2^10")]),e._v(" 种可能，连续相同的子字符串越长，枚举数量呈指数级上升。")]),e._v(" "),_("blockquote",[_("p",[e._v("^([a-zA-Z0-9]+.)+$")])]),e._v(" "),_("p",[e._v("与上个正则类似。")])])}),[],!1,null,null,null);t.default=r.exports}}]);