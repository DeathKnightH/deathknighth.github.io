(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{395:function(t,_,l){"use strict";l.r(_);var r=l(44),i=Object(r.a)({},(function(){var t=this,_=t.$createElement,l=t._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),l("h2",{attrs:{id:"_1-数据结构"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据结构"}},[t._v("#")]),t._v(" 1. 数据结构")]),t._v(" "),l("p",[t._v("记录常用数据结构及其用法。")]),t._v(" "),l("ul",[l("li",[t._v("数组")]),t._v(" "),l("li",[t._v("链表")]),t._v(" "),l("li",[t._v("树\n"),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/algorithm/struct/tree/bst.html"}},[t._v("二叉搜索树(BST)")])],1),t._v(" "),l("li",[l("a",{attrs:{href:""}},[t._v("平衡二叉搜索树")])]),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/struct/tree/btree.html"}},[t._v("B树")])],1),t._v(" "),l("li",[l("a",{attrs:{href:""}},[t._v("B+树")])])])]),t._v(" "),l("li",[t._v("散列表")]),t._v(" "),l("li",[t._v("栈")]),t._v(" "),l("li",[t._v("队列\n"),l("ul",[l("li",[l("a",{attrs:{href:""}},[t._v("双端队列")])]),t._v(" "),l("li",[l("a",{attrs:{href:""}},[t._v("优先队列")])]),t._v(" "),l("li",[l("a",{attrs:{href:""}},[t._v("阻塞队列")])])])]),t._v(" "),l("li",[t._v("图\n"),l("ul",[l("li",[l("a",{attrs:{href:""}},[t._v("图的表示")])]),t._v(" "),l("li",[t._v("[BFS]")]),t._v(" "),l("li",[t._v("[DFS]")])])])]),t._v(" "),l("h2",{attrs:{id:"_2-排序算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-排序算法"}},[t._v("#")]),t._v(" 2. 排序算法")]),t._v(" "),l("h3",{attrs:{id:"_2-1-经典排序算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-经典排序算法"}},[t._v("#")]),t._v(" 2.1 "),l("RouterLink",{attrs:{to:"/algorithm/sort/"}},[t._v("经典排序算法")])],1),t._v(" "),l("h3",{attrs:{id:"_2-2-排序算法应用"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-排序算法应用"}},[t._v("#")]),t._v(" 2.2 排序算法应用")]),t._v(" "),l("h2",{attrs:{id:"_3-常用算法技巧"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用算法技巧"}},[t._v("#")]),t._v(" 3. 常用算法技巧")]),t._v(" "),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/bit.html"}},[t._v("位运算")])],1),t._v(" "),l("li",[t._v("动态规划\n"),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/package.html"}},[t._v("背包问题")])],1),t._v(" "),l("li",[t._v("[斐波那契数列]")]),t._v(" "),l("li",[t._v("[矩阵路径]")]),t._v(" "),l("li",[t._v("[子序列]")]),t._v(" "),l("li",[t._v("[股票交易]")]),t._v(" "),l("li",[t._v("[打家劫舍]")])])]),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/monotonicstack.html"}},[t._v("单调栈")])],1),t._v(" "),l("li",[t._v("前缀和")]),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/unionfind.html"}},[t._v("并查集")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/twopointers.html"}},[t._v("双指针")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/slidingwindow.html"}},[t._v("滑动窗口")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/backtracking.html"}},[t._v("回溯")])],1),t._v(" "),l("li",[t._v("贪心")]),t._v(" "),l("li",[t._v("搜索\n"),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/search/binarysearch.html"}},[t._v("二分")])],1),t._v(" "),l("li",[t._v("BFS")]),t._v(" "),l("li",[t._v("DFS")])])]),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/boyerMooreMajorityVote.html"}},[t._v("摩尔投票")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/countingsort.html"}},[t._v("计数排序")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/linesweep.html"}},[t._v("扫描线")])],1),t._v(" "),l("li",[l("a",{attrs:{href:""}},[t._v("图算法")]),t._v(" "),l("ul",[l("li",[t._v("拓扑排序")]),t._v(" "),l("li",[t._v("最小生成树")])])]),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/BinaryExponentiation.html"}},[t._v("矩阵快速幂")])],1),t._v(" "),l("li",[l("RouterLink",{attrs:{to:"/algorithm/leetcode/RejectSampling.html"}},[t._v("拒绝采样")])],1)]),t._v(" "),l("h2",{attrs:{id:"_4-专业算法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_4-专业算法"}},[t._v("#")]),t._v(" 4. 专业算法")]),t._v(" "),l("ul",[l("li",[t._v("[安全算法]\n"),l("ul",[l("li",[t._v("摘要算法")]),t._v(" "),l("li",[t._v("加密算法")])])]),t._v(" "),l("li",[t._v("[字符串匹配算法]\n"),l("ul",[l("li",[t._v("KMP")]),t._v(" "),l("li",[t._v("Boyer–Moore string-search")])])]),t._v(" "),l("li",[t._v("[最短路径算法]\n"),l("ul",[l("li",[l("RouterLink",{attrs:{to:"/algorithm/advance/singlesourceshortestpaths.html"}},[t._v("单源最短路径")])],1),t._v(" "),l("li",[l("a",{attrs:{href:""}},[t._v("所有节点对的最短路径")])])])]),t._v(" "),l("li",[t._v("[线性规划]")]),t._v(" "),l("li",[t._v("[NP完全性]")]),t._v(" "),l("li",[t._v("[多项式与快速傅里叶变换]")])])])}),[],!1,null,null,null);_.default=i.exports}}]);