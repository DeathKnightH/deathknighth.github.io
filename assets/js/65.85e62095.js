(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{425:function(t,a,s){"use strict";s.r(a);var r=s(44),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"类加载机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类加载机制"}},[t._v("#")]),t._v(" 类加载机制")]),t._v(" "),s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),s("p",[t._v("区别于其他在编译时需要进行连接工作的语言，Java 的类型加载、连接、初始化过程都是在运行时完成的。")]),t._v(" "),s("p",[t._v("虚拟机把描述类的数据从 class 文件（不一定是磁盘文件，只要是能输入的二进制流都行）加载到内存，并对数据进行校验、转换解析和初始化，最终形成可以被虚拟机直接使用的 Java 类型，这就是类加载。")]),t._v(" "),s("h2",{attrs:{id:"_2-类加载的时机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-类加载的时机"}},[t._v("#")]),t._v(" 2. 类加载的时机")])])}),[],!1,null,null,null);a.default=e.exports}}]);