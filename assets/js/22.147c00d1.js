(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{382:function(t,_,a){"use strict";a.r(_);var v=a(44),s=Object(v.a)({},(function(){var t=this,_=t.$createElement,a=t._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"并查集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#并查集"}},[t._v("#")]),t._v(" 并查集")]),t._v(" "),a("p",[t._v("Union Find 常用于动态处理"),a("strong",[t._v("不相交")]),t._v("集合的查询与合并，也就是动态连通性问题。典型应用是最小生成树算法。")]),t._v(" "),a("p",[t._v("不相交：意思是多个集合/元素互不关联，典型的例子是图中不连通的点。")]),t._v(" "),a("p",[t._v("Union Find 就是给不连通的点连通成一个图。")]),t._v(" "),a("h2",{attrs:{id:"_1-基本思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本思路"}},[t._v("#")]),t._v(" 1. 基本思路")]),t._v(" "),a("p",[t._v("并查集的核心思路是实现两个 API ：")]),t._v(" "),a("ul",[a("li",[t._v("find(x, y)      查找 "),a("code",[t._v("x")]),t._v(" 和 "),a("code",[t._v("y")]),t._v(" 是否连通")]),t._v(" "),a("li",[t._v("connect(x, y)   将 "),a("code",[t._v("x")]),t._v(" 和 "),a("code",[t._v("y")]),t._v(" 连通起来")])]),t._v(" "),a("h2",{attrs:{id:"_2-伪代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-伪代码"}},[t._v("#")]),t._v(" 2. 伪代码")]),t._v(" "),a("h2",{attrs:{id:"_3-习题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-习题"}},[t._v("#")]),t._v(" 3. 习题")])])}),[],!1,null,null,null);_.default=s.exports}}]);