(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{365:function(t,_,r){"use strict";r.r(_);var a=r(44),v=Object(a.a)({},(function(){var t=this,_=t.$createElement,r=t._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),r("h2",{attrs:{id:"_1-数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据结构"}},[t._v("#")]),t._v(" 1. 数据结构")]),t._v(" "),r("p",[t._v("记录常用数据结构及其用法。")]),t._v(" "),r("ul",[r("li",[t._v("数组")]),t._v(" "),r("li",[t._v("链表")]),t._v(" "),r("li",[t._v("树\n"),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/struct/tree/bst.html"}},[t._v("二叉搜索树(BST)")])],1),t._v(" "),r("li",[r("a",{attrs:{href:""}},[t._v("平衡二叉搜索树")])]),t._v(" "),r("li",[r("a",{attrs:{href:""}},[t._v("B树")])]),t._v(" "),r("li",[r("a",{attrs:{href:""}},[t._v("B+树")])])])]),t._v(" "),r("li",[t._v("栈")]),t._v(" "),r("li",[t._v("队列\n"),r("ul",[r("li",[r("a",{attrs:{href:""}},[t._v("双端队列")])]),t._v(" "),r("li",[r("a",{attrs:{href:""}},[t._v("优先队列")])]),t._v(" "),r("li",[r("a",{attrs:{href:""}},[t._v("阻塞队列")])])])])]),t._v(" "),r("h2",{attrs:{id:"_2-排序算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-排序算法"}},[t._v("#")]),t._v(" 2. 排序算法")]),t._v(" "),r("h3",{attrs:{id:"_2-1-经典排序算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-经典排序算法"}},[t._v("#")]),t._v(" 2.1 经典排序算法")]),t._v(" "),r("h3",{attrs:{id:"_2-2-排序算法应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-排序算法应用"}},[t._v("#")]),t._v(" 2.2 排序算法应用")]),t._v(" "),r("h2",{attrs:{id:"_3-常用算法思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用算法思路"}},[t._v("#")]),t._v(" 3. 常用算法思路")]),t._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/bit.html"}},[t._v("位运算")])],1),t._v(" "),r("li",[t._v("[动态规划]\n"),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/package.html"}},[t._v("背包问题")])],1)])]),t._v(" "),r("li",[t._v("单调栈")]),t._v(" "),r("li",[t._v("滑动窗口")]),t._v(" "),r("li",[t._v("回溯")]),t._v(" "),r("li",[t._v("贪心")]),t._v(" "),r("li",[t._v("搜索\n"),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/search/binarysearch.html"}},[t._v("二分")])],1),t._v(" "),r("li",[t._v("BFS")]),t._v(" "),r("li",[t._v("DFS")])])]),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/boyerMooreMajorityVote.html"}},[t._v("摩尔投票")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/countingsort.html"}},[t._v("计数排序")])],1),t._v(" "),r("li",[r("RouterLink",{attrs:{to:"/algorithm/leetcode/linesweep.html"}},[t._v("扫描线")])],1)]),t._v(" "),r("h2",{attrs:{id:"_4-专业算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-专业算法"}},[t._v("#")]),t._v(" 4. 专业算法")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:""}},[t._v("安全算法")]),t._v(" "),r("ul",[r("li",[t._v("摘要算法")]),t._v(" "),r("li",[t._v("加密算法")])])]),t._v(" "),r("li",[t._v("[字符串匹配算法][]\n"),r("ul",[r("li",[t._v("KMP")]),t._v(" "),r("li",[t._v("Boyer–Moore string-search")])])]),t._v(" "),r("li",[t._v("[最短路径算法][]")])])])}),[],!1,null,null,null);_.default=v.exports}}]);