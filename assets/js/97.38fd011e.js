(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{485:function(t,r,a){"use strict";a.r(r);var e=a(44),n=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"reentrantlock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reentrantlock"}},[t._v("#")]),t._v(" ReentrantLock")]),t._v(" "),a("h2",{attrs:{id:"_1-内部结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-内部结构"}},[t._v("#")]),t._v(" 1. 内部结构")]),t._v(" "),a("p",[t._v("ReentrantLock 没有直接继承 AbstractQueuedSynchronizer，而是通过组合的方式在内部声明了一个 Sync，由这个 Sync 继承 AQS 来实现同步器的功能。")]),t._v(" "),a("h3",{attrs:{id:"_1-1-内部类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-内部类"}},[t._v("#")]),t._v(" 1.1 内部类")]),t._v(" "),a("ul",[a("li",[t._v("Sync 继承自 AbstractQueuedSynchronizer")]),t._v(" "),a("li",[t._v("NonFairSync 非公平同步器，继承自 Sync")]),t._v(" "),a("li",[t._v("FairSync 公平同步器，继承自 Sync")])]),t._v(" "),a("h2",{attrs:{id:"_2-核心函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-核心函数"}},[t._v("#")]),t._v(" 2. 核心函数")]),t._v(" "),a("h3",{attrs:{id:"_2-1-lock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-lock"}},[t._v("#")]),t._v(" 2.1 lock()")]),t._v(" "),a("h3",{attrs:{id:"_2-2-unlock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-unlock"}},[t._v("#")]),t._v(" 2.2 unlock()")]),t._v(" "),a("h2",{attrs:{id:"_3-使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用示例"}},[t._v("#")]),t._v(" 3. 使用示例")]),t._v(" "),a("ul",[a("li",[t._v("使用 ReentrantLock 的 condition 特性实现多条件等待")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://leetcode.cn/problems/design-bounded-blocking-queue/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配合 condition 使用的示例"),a("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=n.exports}}]);