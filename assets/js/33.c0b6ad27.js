(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{398:function(t,a,v){"use strict";v.r(a);var _=v(44),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"归并排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#归并排序"}},[t._v("#")]),t._v(" 归并排序")]),t._v(" "),v("h2",{attrs:{id:"_1-原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理"}},[t._v("#")]),t._v(" 1. 原理")]),t._v(" "),v("p",[t._v("归并排序（merge sort）采用了分治的思想，整个流程大概可以描述为以下3步：\n1、将当前序列分为两个子序列\n2、对子序列进行归并排序\n3、合并两个子序列")]),t._v(" "),v("p",[t._v("其中最关键的是第3步，需要保证两个有序的子序列合并后仍然是有序的。")]),t._v(" "),v("h2",{attrs:{id:"_2-性质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-性质"}},[t._v("#")]),t._v(" 2. 性质")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("性质")]),t._v(" "),v("th"),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("稳定性")]),t._v(" "),v("td",[t._v("稳定")]),t._v(" "),v("td",[t._v("因为实现排序的是合并操作，只要保证合并时前后两个序列的相对顺序就能保证稳定了")])]),t._v(" "),v("tr",[v("td",[t._v("最坏时间复杂度")]),t._v(" "),v("td",[t._v("O(nlogn)")]),t._v(" "),v("td",[t._v("时间复杂度均为 O(nlogn)，因为无论什么情况归并排序总是二分的，就像一颗二叉树，实际外层循环的次数是树的高度，即 logn，内层循环因为合并需要遍历一遍整个序列")])]),t._v(" "),v("tr",[v("td",[t._v("最好时间复杂度")]),t._v(" "),v("td",[t._v("O(nlogn)")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("平均时间复杂度")]),t._v(" "),v("td",[t._v("O(nlogn)")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("空间复杂度")]),t._v(" "),v("td",[t._v("O(n)")]),t._v(" "),v("td",[t._v("虽然一次分治的排序只需要 1 个额外空间存储交换时的临时元素，但是递归需要至少 logn 深度的栈空间来实现，迭代写法的集合也需要同时记录至少 logn 个 index 数据。")])])])]),t._v(" "),v("h2",{attrs:{id:"_3-java-实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-java-实现"}},[t._v("#")]),t._v(" 3. java 实现")]),t._v(" "),v("ul",[v("li",[t._v("递归实现："),v("a",{attrs:{href:"https://github.com/DeathKnightH/JavaTest/blob/master/src/main/java/cn/dk/algorithm/sort/Merging.java",target:"_blank",rel:"noopener noreferrer"}},[t._v("以前写的代码"),v("OutboundLink")],1)]),t._v(" "),v("li",[t._v("非递归：")])]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);