(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{366:function(_,v,t){"use strict";t.r(v);var a=t(44),s=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"位运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#位运算"}},[_._v("#")]),_._v(" 位运算")]),_._v(" "),t("h2",{attrs:{id:"_1-位运算常用公式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-位运算常用公式"}},[_._v("#")]),_._v(" 1. 位运算常用公式")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("计算只包含最后一位1的二进制数")]),_._v(" "),t("p",[_._v("x&-x")])]),_._v(" "),t("li",[t("p",[_._v("计算消除了最后一位1的二进制数")]),_._v(" "),t("p",[_._v("x&（x-1）")])])]),_._v(" "),t("ul",[t("li",[t("p",[_._v("计算最大公约数")]),_._v(" "),t("p",[_._v("x % y 一直递归下去，直到x＝＝y就是最大公约数。")])]),_._v(" "),t("li",[t("p",[_._v("查找重复数字")]),_._v(" "),t("p",[_._v("x^x == 0")]),_._v(" "),t("p",[_._v("x^x^x == x")]),_._v(" "),t("p",[_._v("奇数次异或可以得到原数字，偶数次异或得到0，可以用来区分重复次数分别为奇数和偶数的两组数字。")])])]),_._v(" "),t("h2",{attrs:{id:"_2-应用方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用方案"}},[_._v("#")]),_._v(" 2. 应用方案")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("二进制压缩")]),_._v(" "),t("p",[_._v("当问题有一系列不同的元素只有有限种状态时，可以用二进制表示状态，称为二进制压缩。")])])]),_._v(" "),t("ul",[t("li",[t("p",[_._v("二进制归并")]),_._v(" "),t("p",[_._v("0x55555555")]),_._v(" "),t("p",[_._v("0x33333333")]),_._v(" "),t("p",[_._v("0x0f0f0f0f")]),_._v(" "),t("p",[_._v("0x00ff00ff")]),_._v(" "),t("p",[_._v("0x0000ffff")]),_._v(" "),t("p",[_._v("经常用于二进制位上的二路归并，可用于排序（比如二进制位反转），也可用于计数（比如计算二进制位中1的个数）")])]),_._v(" "),t("li",[t("p",[_._v("hash表和位运算配合可以大幅降低时间复杂度和空间复杂度")])]),_._v(" "),t("li",[t("p",[_._v("状态机用位运算可以在有限内存下表示更多状态")])])])])}),[],!1,null,null,null);v.default=s.exports}}]);