(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{368:function(n,s,t){"use strict";t.r(s);var a=t(44),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"计数排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#计数排序"}},[n._v("#")]),n._v(" 计数排序")]),n._v(" "),t("p",[t("strong",[n._v("基于比较的时间复杂度存在下界")]),n._v(" O(nlogn)。")]),n._v(" "),t("p",[n._v("Counting Sort 是一种非基于比较的排序，主要思路是用空间换时间，当集合中整数取值范围不大时可以使用，它的复杂度为Ο(n+k)（其中k是整数的范围）。")]),n._v(" "),t("h2",{attrs:{id:"_1-实现思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-实现思路"}},[n._v("#")]),n._v(" 1. 实现思路")]),n._v(" "),t("p",[n._v("​\t适用计数排序需满足以下条件：")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("输入的线性表的元素属于有限偏序集S；")])]),n._v(" "),t("li",[t("p",[n._v("设输入的线性表的长度为n，|S|=k（表示集合S中元素的总数目为k），满足 k=O(n)。")])])]),n._v(" "),t("p",[n._v("​\t计数排序的基本思想是对于给定的输入序列中的每一个元素 x，确定该序列中值小于 x 的元素的个数（此处并非比较各元素的大小，而是通过对元素值的计数和计数值的累加来确定）。一旦有了这个信息，就可以将x直接存放到最终的输出序列的正确位置上。")]),n._v(" "),t("p",[n._v("例如，输入序列中只有 "),t("code",[n._v("26")]),n._v(" 种元素 "),t("code",[n._v("A~Z")]),n._v(" ，可以使用一个 "),t("code",[n._v("int[26]")]),n._v(" 的数组依次记录从 "),t("code",[n._v("A")]),n._v(" 到 "),t("code",[n._v("Z")]),n._v(" 每个出现的次数，其中 "),t("code",[n._v("A")]),n._v(" 对应 "),t("code",[n._v("[0]")]),n._v(" 位置的元素， "),t("code",[n._v("Z")]),n._v(" 对应 "),t("code",[n._v("[25]")]),n._v(" 位置的元素：\n依次遍历输入集合，记录 "),t("code",[n._v("A~Z")]),n._v(" 各个元素的个数：\n最后按照这个 "),t("code",[n._v("int[26]")]),n._v(" 数组内记录的个数依次从 "),t("code",[n._v("[0]")]),n._v(" 下标到 "),t("code",[n._v("[25]")]),n._v(" 下标输出排序后的集合。")]),n._v(" "),t("h2",{attrs:{id:"_2-代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-代码实现"}},[n._v("#")]),n._v(" 2. 代码实现")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("int n = s.length;\nint result = new int[n];\n\nint max = 0;\nint min = 0;\nfor(int temp : s){\n\tmax = Math.max(max, temp);\n    min = Math.min(min, temp);\n}\nint k = max - min + 1\nint[] countArray = new int[k];\n// 计数\nfor(int temp : s){\n\tcountArray[temp - min] ++;\n}\nint count = 0\nfor(int i = 0; i < k; i++){\n\tcount += countArray[i];\n\tcountArray[i] = count;\n}\n\n// 排序\nfor(int i = n - 1; i >= 0; i--){\n\tcountArray[s[i] - min] --;\n\tint currentIndex = countArray[s[i] - min];\n\tresult[currentIndex] = s[i];\n}\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br")])]),t("h2",{attrs:{id:"_3-习题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-习题"}},[n._v("#")]),n._v(" 3. 习题")]),n._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/h-index/",target:"_blank",rel:"noopener noreferrer"}},[n._v("274. H 指数"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);