(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{484:function(e,t,a){"use strict";a.r(t);var r=a(44),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("GET 是可以带 request body 的，理论上 HTTP 所有的方法都可以带 body，只是以前 HTTP 协议规范里规定了服务器要忽略 GET 请求里的 body 。2014年之后的协议规范没有要求忽略 body 了，只要能确切地指定 GET 中 body 的作用就是可以使用的，比如 ElasticSearch 的 get 就是带 body 的。")]),e._v(" "),a("p",[e._v("当然实际工作中在 GET 中使用 body 要谨慎，因为很多系统和服务遵循以前的 http 标准，GET 中的 body 会被忽略，或者干脆报错。")]),e._v(" "),a("p",[e._v("TCP："),a("a",{attrs:{href:"https://writings.sh/post/network-tcp",target:"_blank",rel:"noopener noreferrer"}},[e._v("TCP 协议原理总结"),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"ntp协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ntp协议"}},[e._v("#")]),e._v(" NTP协议")]),e._v(" "),a("p",[e._v("网络授时，用于同步服务器时间，java可以使用apache commons-net 包的 NTPUDPClient 类从指定的授时服务获取时间。")]),e._v(" "),a("p",[e._v("国内常用：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ntp.aliyun.com\nntp1.aliyun.com\nntp2.aliyun.com\ntime1.cloud.tencent.com \ntime2.cloud.tencent.com \ntime3.cloud.tencent.com\ntime4.cloud.tencent.com\ntime5.cloud.tencent.com\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h2",{attrs:{id:"http-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-协议"}},[e._v("#")]),e._v(" HTTP 协议")]),e._v(" "),a("h3",{attrs:{id:"header-的小细节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header-的小细节"}},[e._v("#")]),e._v(" Header 的小细节")]),e._v(" "),a("p",[e._v("HTTP 1.x 协议规定了 Http Header field 不区分大小写。查看 JavaEE javax.servlet.http.HttpServletRequest#getHeader(String) 方法注释，也是不区分大小写的。")]),e._v(" "),a("p",[e._v("但是 HTTP 2.x 协议规定了 Http Header field 必须小写，所有包含大写字母都必须被认为是不合法的 header（However, header field names MUST be converted to lowercase prior to their encoding in HTTP/2. A request or response containing uppercase header field names MUST be treated as malformed 来自 "),a("a",{attrs:{href:"https://httpwg.org/specs/rfc7540.html#HttpHeaders",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP Header Fields"),a("OutboundLink")],1),e._v("）")]),e._v(" "),a("p",[e._v("QUIC")]),e._v(" "),a("p",[e._v("HTTP/3")]),e._v(" "),a("h2",{attrs:{id:"安全协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全协议"}},[e._v("#")]),e._v(" 安全协议")]),e._v(" "),a("p",[e._v("SSHv2")]),e._v(" "),a("p",[e._v("TLS1.2/TLS1.3")]),e._v(" "),a("p",[e._v("IPSec")]),e._v(" "),a("p",[e._v("SFTP")]),e._v(" "),a("p",[e._v("SNMPv3")]),e._v(" "),a("h2",{attrs:{id:"不安全协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不安全协议"}},[e._v("#")]),e._v(" 不安全协议")]),e._v(" "),a("p",[e._v("TFTP/FTP")]),e._v(" "),a("p",[e._v("Telnet")]),e._v(" "),a("p",[e._v("SSL2.0/SSL3.0/TLS1.0/TLS1.1")]),e._v(" "),a("p",[e._v("SNMPv1/SNMPv2")]),e._v(" "),a("p",[e._v("SSHv1.x")])])}),[],!1,null,null,null);t.default=n.exports}}]);