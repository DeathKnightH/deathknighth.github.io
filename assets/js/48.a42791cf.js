(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{416:function(t,s,a){"use strict";a.r(s);var n=a(44),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"希尔排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序"}},[t._v("#")]),t._v(" 希尔排序")]),t._v(" "),a("p",[t._v("希尔排序（Shell Sort）也称为缩小增量排序，是一种改进的"),a("RouterLink",{attrs:{to:"/algorithm/sort/InsertionSort.html"}},[t._v("插入排序")]),t._v("。以它的发明者 Donald Shell 命名。")],1),t._v(" "),a("h2",{attrs:{id:"_1-原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-原理"}},[t._v("#")]),t._v(" 1. 原理")]),t._v(" "),a("p",[t._v("对不相邻的元素进行比较和移动：\n1、将原序列分为自身元素间距相同的若干子序列。比如：")]),t._v(" "),a("blockquote",[a("p",[t._v("[1,2,3,4,5,6,7,8,9] 分为 [1,4,7]/[2,5,8]/[3,6,9] 这3个子序列")])]),t._v(" "),a("p",[t._v("2、对这些子序列分别执行插入排序。")]),t._v(" "),a("p",[t._v("3、减少每个子序列中各元素间的间距。")]),t._v(" "),a("p",[t._v("4、重复以上过程直至间距减少为 1，此时排序完成。")]),t._v(" "),a("h2",{attrs:{id:"_2-性质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-性质"}},[t._v("#")]),t._v(" 2.性质")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("性质")]),t._v(" "),a("th"),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("稳定性")]),t._v(" "),a("td",[t._v("不稳定")]),t._v(" "),a("td",[t._v("因为是分组排序的，不能保证相等元素的最终顺序")])]),t._v(" "),a("tr",[a("td",[t._v("最坏时间复杂度")]),t._v(" "),a("td",[t._v("O(n^2)")]),t._v(" "),a("td",[t._v("最坏情况间距为1，退化为直接插入排序")])]),t._v(" "),a("tr",[a("td",[t._v("最好时间复杂度")]),t._v(" "),a("td",[t._v("O(n)")]),t._v(" "),a("td",[t._v("完全有序的序列只需要扫描一次全序列就可以完成排序")])]),t._v(" "),a("tr",[a("td",[t._v("平均时间复杂度")]),t._v(" "),a("td",[t._v("O(n^3/2)")]),t._v(" "),a("td",[t._v("希尔排序的时间复杂度与分组间距有关，通常采用每次间距除以3来计算所以是 $n^{3/2}$")])]),t._v(" "),a("tr",[a("td",[t._v("空间复杂度")]),t._v(" "),a("td",[t._v("O(1)")]),t._v(" "),a("td",[t._v("可以只用 1 个额外空间存储交换时的临时元素，某些特殊情况甚至可以不使用额外空间")])])])]),t._v(" "),a("h2",{attrs:{id:"_3-java-实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-java-实现"}},[t._v("#")]),t._v(" 3. Java 实现")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    public void shellSort(int[] array){\n        int n = array.length;\n        int step = 1;\n        while(step < n/3){\n            step = step * 3 + 1;\n        }\n        // 外层循环每次除以3来减少间距直到1\n        while(step >= 1){\n            insertionSort(array, step);\n            step /= 3;\n        }\n    }\n    \n    // 对每个分组进行插入排序\n    private void insertionSort(int[] array, int step){\n        for(int i = step; i < array.length; ++i){\n            int temp = array[i];\n            int j;\n            for(j = i; j >= step && temp < array[j- step]; j -= step){\n                array[j] = array[j- step];\n            }\n            array[j] = temp;\n        }\n    }\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);